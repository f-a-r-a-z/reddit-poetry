{"version":3,"sources":["App.js","index.js"],"names":["SubredditInput","props","react_default","a","createElement","className","method","type","name","defaultValue","subreddit","spellCheck","placeholder","autoComplete","SubredditSubmit","onClick","_callee","apiUrl","apiResponse","poemJSON","regenerator_default","wrap","_context","prev","next","URL","searchParams","set","fetch","toString","sent","json","abrupt","t0","stop","SubredditPoem","state","loading","_this2","this","getPoemJSON","then","setState","jsx","_this$state","Loading","length","Error","map","PoemLine","title","permalink","key","getPoemJSX","React","Component","href","concat","dangerouslySetInnerHTML","__html","target","rel","App","URLSearchParams","window","location","search","get","hasSubredditInput","App_SubredditPoem","ReactDOM","render","src_App","document","getElementById"],"mappings":"0RAgBA,SAASA,EAAeC,GACvB,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,QAAME,OAAO,OAAb,MACIJ,EAAAC,EAAAC,cAAA,SACFG,KAAK,OACLC,KAAK,YACLC,aAAcR,EAAMS,UACpBL,UAAU,aACVM,WAAW,QACXC,YAAY,YACZC,aAAa,QACdX,EAAAC,EAAAC,cAACU,EAAD,QAMJ,SAASA,IACR,OACCZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,UACAC,UAAU,qCACVU,QAAS,cAFT,sDASH,SAAAC,EAA2BN,GAA3B,IAAAO,EAAAC,EAAAC,EAAA,OAAAC,EAAAjB,EAAAkB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACOP,EAAS,IAAIQ,IAAI,uCAChBC,aAAaC,IAAI,YAAajB,GAFtCY,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAI4BI,MAAMX,EAAOY,YAJzC,cAIQX,EAJRI,EAAAQ,KAAAR,EAAAE,KAAA,EAKyBN,EAAYa,OALrC,cAKQZ,EALRG,EAAAQ,KAAAR,EAAAU,OAAA,SAMSb,GANT,eAAAG,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAAAA,EAAAU,OAAA,SAQS,IART,yBAAAV,EAAAY,SAAAlB,EAAA,6CAsBMmB,6MACLC,MAAQ,CACPC,SAAS,EACTlB,SAAU,yFAGS,IAAAmB,EAAAC,kDACnBC,CAAYD,KAAKtC,MAAMS,WACrB+B,KAAK,SAAAV,GAAI,OAAIO,EAAKI,SAAS,CAACvB,SAAUY,MACtCU,KAAK,kBAAMH,EAAKI,SAAS,CAACL,SAAS,uCAG7B,IAEJM,EAFIC,EACoBL,KAAKH,MAA1BC,EADCO,EACDP,QAASlB,EADRyB,EACQzB,SAWhB,OAPCwB,EADGN,EACGnC,EAAAC,EAAAC,cAACyC,EAAD,OACK1B,GAAYA,EAAS2B,QAAU,EACpC5C,EAAAC,EAAAC,cAAC2C,EAAD,MA7BT,SAAoB5B,GACnB,OAAOA,EAAS6B,IAAI,SAAAjB,GAAI,OACvB7B,EAAAC,EAAAC,cAAC6C,EAAD,CACCC,MAAOnB,EAAKmB,MACZC,UAAWpB,EAAKoB,UAChBC,IAAKrB,EAAKoB,cA0BJE,CAAWlC,GAIjBjB,EAAAC,EAAAC,cAAA,cACCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbsC,WA3BsBW,IAAMC,WAkClC,SAASN,EAAShD,GACjB,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACdH,EAAAC,EAAAC,cAAA,KACCoD,KAAI,qBAAAC,OAAuBxD,EAAMkD,WACjC9C,UAAU,iCACVqD,wBAAyB,CAACC,OAAQ1D,EAAMiD,OACxCU,OAAO,SACPC,IAAI,wBAEL3D,EAAAC,EAAAC,cAAA,YAKH,SAASyC,IACR,OACC3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,cAMF,SAAS0C,IACR,OACC7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,2BAMayD,MAlIf,WACC,IACMpD,EADY,IAAIqD,gBAAgBC,OAAOC,SAASC,QAC1BC,IAAI,cAAgB,GAC1CC,EAAoB1D,EAAUoC,OAAS,EAE7C,OACC5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAACJ,EAAD,CAAgBU,UAAWA,IAC1B0D,GAAqBlE,EAAAC,EAAAC,cAACiE,EAAD,CAAe3D,UAAWA,MCNnD4D,IAASC,OAAOrE,EAAAC,EAAAC,cAACoE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.643b6a79.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n\tconst urlParams = new URLSearchParams(window.location.search);\n\tconst subreddit = urlParams.get(\"subreddit\") || \"\";\n\tconst hasSubredditInput = subreddit.length > 0;\n\n\treturn (\n\t\t<div className=\"App text-style\">\n\t\t\t<SubredditInput subreddit={subreddit} />\n\t\t\t{hasSubredditInput && <SubredditPoem subreddit={subreddit} />}\n\t\t</div>\n\t);\n}\n\nfunction SubredditInput(props) {\n\treturn (\n\t\t<div className=\"subreddit-input\">\n\t\t\t<form method=\"get\">\n\t\t\t\t/r/<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"subreddit\"\n\t\t\t\t\tdefaultValue={props.subreddit}\n\t\t\t\t\tclassName=\"text-style\"\n\t\t\t\t\tspellCheck=\"false\"\n\t\t\t\t\tplaceholder=\"AskReddit\"\n\t\t\t\t\tautoComplete=\"off\" />\n\t\t\t\t<SubredditSubmit />\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nfunction SubredditSubmit() {\n\treturn (\n\t\t<div className=\"subreddit-submit\">\n\t\t\t<button\n\t\t\tclassName=\"subreddit-submit-button text-style\"\n\t\t\tonClick={()=>{}}>\n\t\t\t\tâž¡\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nasync function getPoemJSON(subreddit) {\n\tconst apiUrl = new URL('https://redditpoetry.herokuapp.com');\n\tapiUrl.searchParams.set('subreddit', subreddit);\n\ttry {\n\t\tconst apiResponse = await fetch(apiUrl.toString());\n\t\tconst poemJSON = await apiResponse.json();\n\t\treturn poemJSON;\n\t} catch(error) {\n\t\treturn [];\n\t}\n}\n\nfunction getPoemJSX(poemJSON) {\n\treturn poemJSON.map(json =>\n\t\t<PoemLine\n\t\t\ttitle={json.title}\n\t\t\tpermalink={json.permalink}\n\t\t\tkey={json.permalink}\n\t\t/>\n\t);\n}\n\nclass SubredditPoem extends React.Component {\n\tstate = {\n\t\tloading: true,\n\t\tpoemJSON: null\n\t};\n\n\tcomponentDidMount() {\n\t\tgetPoemJSON(this.props.subreddit)\n\t\t\t.then(json => this.setState({poemJSON: json}))\n\t\t\t.then(() => this.setState({loading: false}));\n\t}\n\n\trender() {\n\t\tconst {loading, poemJSON} = this.state;\n\t\tlet jsx;\n\n\t\tif (loading) {\n\t\t\tjsx = <Loading />;\n\t\t} else if (!poemJSON || poemJSON.length <= 2) {\n\t\t\tjsx = <Error />;\n\t\t} else {\n\t\t\tjsx = getPoemJSX(poemJSON);\n\t\t}\n\n\t\treturn (\n\t\t\t<center>\n\t\t\t\t<div className=\"subreddit-poem\">\n\t\t\t\t\t{jsx}\n\t\t\t\t</div>\n\t\t\t</center>\n\t\t);\n\t}\n}\n\nfunction PoemLine(props) {\n\treturn (\n\t\t<div className=\"subreddit-poem-line\">\n\t\t\t<a\n\t\t\t\thref={`https://reddit.com${props.permalink}`}\n\t\t\t\tclassName=\"subreddit-poem-link text-style\"\n\t\t\t\tdangerouslySetInnerHTML={{__html: props.title}} // Prevent react double-escaping html\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t></a>\n\t\t\t<br />\n\t\t</div>\n\t);\n}\n\nfunction Loading() {\n\treturn (\n\t\t<div className=\"loading\">\n\t\t\tLoading...\n\t\t</div>\n\t);\n}\n\nfunction Error() {\n\treturn (\n\t\t<div className=\"error\">\n\t\t\tSomething went wrong...\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}