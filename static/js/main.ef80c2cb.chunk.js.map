{"version":3,"sources":["App.js","index.js"],"names":["App","backgroundColors","backgroundColor","Math","floor","random","length","document","querySelector","style","setProperty","setRandomBackgroundColor","subreddit","URLSearchParams","window","location","search","get","hasSubredditInput","react_default","a","createElement","className","SubredditInput","App_SubredditPoem","EnterMessage","Footer","React","Component","props","method","htmlFor","hidden","type","name","defaultValue","spellCheck","placeholder","autoComplete","SubredditSubmit","_callee","apiUrl","apiResponse","poemJSON","regenerator_default","wrap","_context","prev","next","URL","searchParams","set","fetch","toString","sent","json","abrupt","t0","stop","SubredditPoem","state","loading","_this2","this","getPoemJSON","then","setState","jsx","_this$state","Loading","Error","map","PoemLine","title","permalink","key","getPoemJSX","href","concat","dangerouslySetInnerHTML","__html","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.ef80c2cb.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n\tcomponentDidMount() {\n\t\tsetRandomBackgroundColor();\n\t}\n\n\trender() {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\tconst subreddit = urlParams.get(\"subreddit\") || \"\";\n\t\tconst hasSubredditInput = subreddit.length > 0;\n\n\t\treturn (\n\t\t\t<div className=\"App text-style\">\n\t\t\t\t<SubredditInput subreddit={subreddit} />\n\t\t\t\t{hasSubredditInput\n\t\t\t\t\t? <SubredditPoem subreddit={subreddit} />\n\t\t\t\t\t: <EnterMessage />}\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction setRandomBackgroundColor() {\n\tconst backgroundColors = ['#7BAE7F', '#DF2935', '#C68F61', '#412722', '#6320EE', '#211A1D', '#829EAF', '#FF934F', '#735D78', '#839E8E', '#861657'];\n\tconst backgroundColor = backgroundColors[Math.floor(Math.random() * backgroundColors.length)];\n\tdocument.querySelector('.App').style.setProperty('--bg-color', backgroundColor);\n}\n\nfunction SubredditInput(props) {\n\treturn (\n\t\t<form method=\"get\" className=\"subreddit-input\">\n\t\t\t<label htmlFor=\"subreddit\" hidden={true}>Subreddit: </label>\n\t\t\t/r/<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"subreddit\"\n\t\t\t\tdefaultValue={props.subreddit}\n\t\t\t\tclassName=\"text-style\"\n\t\t\t\tspellCheck=\"false\"\n\t\t\t\tplaceholder=\"AskReddit\"\n\t\t\t\tautoComplete=\"off\" />\n\t\t\t<SubredditSubmit />\n\t\t</form>\n\t);\n}\n\nfunction SubredditSubmit() {\n\treturn (\n\t\t<div className=\"subreddit-submit\">\n\t\t\t<button\n\t\t\tclassName=\"subreddit-submit-button text-style\">\n\t\t\t\tâ†’\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nasync function getPoemJSON(subreddit) {\n\tconst apiUrl = new URL('https://redditpoetry.herokuapp.com');\n\tapiUrl.searchParams.set('subreddit', subreddit);\n\ttry {\n\t\tconst apiResponse = await fetch(apiUrl.toString());\n\t\tconst poemJSON = await apiResponse.json();\n\t\treturn poemJSON;\n\t} catch(error) {\n\t\treturn [];\n\t}\n}\n\nfunction getPoemJSX(poemJSON) {\n\treturn poemJSON.map(json =>\n\t\t<PoemLine\n\t\t\ttitle={json.title}\n\t\t\tpermalink={json.permalink}\n\t\t\tkey={json.permalink}\n\t\t/>\n\t);\n}\n\nclass SubredditPoem extends React.Component {\n\tstate = {\n\t\tloading: true,\n\t\tpoemJSON: null\n\t};\n\n\tcomponentDidMount() {\n\t\tgetPoemJSON(this.props.subreddit)\n\t\t\t.then(json => this.setState({poemJSON: json}))\n\t\t\t.then(() => this.setState({loading: false}));\n\t}\n\n\trender() {\n\t\tconst {loading, poemJSON} = this.state;\n\t\tlet jsx;\n\n\t\tif (loading) {\n\t\t\tjsx = <Loading />;\n\t\t} else if (!poemJSON || poemJSON.length < 2) {\n\t\t\tjsx = <Error />;\n\t\t} else {\n\t\t\tjsx = getPoemJSX(poemJSON);\n\t\t}\n\n\t\treturn (\n\t\t\t<center>\n\t\t\t\t<article className=\"subreddit-poem\">\n\t\t\t\t\t{jsx}\n\t\t\t\t</article>\n\t\t\t</center>\n\t\t);\n\t}\n}\n\nfunction PoemLine(props) {\n\treturn (\n\t\t<p className=\"subreddit-poem-line\">\n\t\t\t<a\n\t\t\t\thref={`https://reddit.com${props.permalink}`}\n\t\t\t\tclassName=\"link text-style\"\n\t\t\t\tdangerouslySetInnerHTML={{__html: props.title}} // Prevent react double-escaping html\n\t\t\t></a>\n\t\t\t<br />\n\t\t</p>\n\t);\n}\n\nfunction EnterMessage() {\n\treturn (\n\t\t<p>\n\t\t\tEnter a subreddit\n\t\t</p>\n\t);\n}\n\nfunction Loading() {\n\treturn (\n\t\t<p>\n\t\t\tLoading...\n\t\t</p>\n\t);\n}\n\nfunction Error() {\n\treturn (\n\t\t<p>\n\t\t\tSomething went wrong...\n\t\t</p>\n\t);\n}\n\nfunction Footer() {\n\treturn (\n\t\t<footer>\n\t\t\t\tPoems refreshed daily | <a\n\t\t\t\thref=\"https://github.com/f-a-r-a-z/reddit-poetry\"\n\t\t\t\tclassName=\"link text-style\">\n\t\t\t\t\tSource on GitHub\n\t\t\t\t</a>\n\t\t</footer>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}